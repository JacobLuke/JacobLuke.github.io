<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jacob's Blograhams</title><link href="http://jabrahams.ca/" rel="alternate"></link><link href="http://jabrahams.ca/feeds%5Call.atom.xml" rel="self"></link><id>http://jabrahams.ca/</id><updated>2014-03-08T19:00:00Z</updated><entry><title>Java - the Barbed-Wire Fence of Programming</title><link href="http://jabrahams.ca/java.html" rel="alternate"></link><updated>2014-03-08T19:00:00Z</updated><author><name>Jacob Abrahams</name></author><id>tag:jabrahams.ca,2014-03-08:java.html</id><summary type="html">&lt;p&gt;Occasionally, I like to take a step back and look at the programming languages I've used over the years. What better place to start than with my first, my last, my everything?&lt;/p&gt;
&lt;p&gt;I've been programming Java since high school, and it was the first real language I was exposed to. I suspect that, when I sleep, I still type&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;because it's &lt;em&gt;that&lt;/em&gt; ingrained in my muscle memory. And you know what?&lt;/p&gt;
&lt;p&gt;Java is an &lt;em&gt;awful&lt;/em&gt; choice for a first language.&lt;/p&gt;
&lt;p&gt;I'm not going to just state that, I'll give reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java &lt;em&gt;requires&lt;/em&gt; Object-Oriented Programming. Every java program is a function embedded in an object. Way to keep a gentle learning curve, there.&lt;/li&gt;
&lt;li&gt;Java relies extensively on imports from other libraries, and other classes and types. That's so much to explain to a beginning programmer. Or not, which was the case with me: just don't explain anything, and just use it.&lt;/li&gt;
&lt;li&gt;Java forces exception handling. Never mind that you're just starting out and probably don't even know what an exception is.&lt;/li&gt;
&lt;li&gt;Java is garbage-collected, which means that you don't even know where things are going. &lt;code&gt;new&lt;/code&gt; is just a keyword that makes things happen to you.&lt;/li&gt;
&lt;li&gt;Java tends to use verbosity to the extreme: it makes simple tasks tedious, and complex tasks impossible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Probably think with Point 4 up there that I advocate C or C++ instead, right? Well, yes and no. I think that those languages are great for teaching a fledgling programmer that the program you write can do horrible, terrifying things if you fuck up, which can be great for traumatizing a freshman programmer into getting his/her shit together, or it can mess up their mind really badly. I also think that languages like Python are too high-level to make certain the programmer knows exactly what they're doing, relying on language constructs more than common sense. So, I'd actually like to see someone teach using C and Python &lt;em&gt;in combination&lt;/em&gt;. (Though not in CPython, because that's really just the worst of both worlds.)&lt;/p&gt;
&lt;p&gt;Anyway, this article isn't about ripping on Java as a choice of teaching language. It's about ripping on Java's design choices. Full disclosure from this point on: I actually write Java full-time, so I'm going to avoid writing my way out of a job.&lt;/p&gt;
&lt;p&gt;Let's get down to it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verbosity. Oh my &lt;em&gt;God&lt;/em&gt; the verbosity. My fingers sometimes hurt after typing Java more than they'd hurt after an essay or a particularly long-winded blog post.&lt;/li&gt;
&lt;li&gt;Strictness in file organization. A file named [Foo].java can only have one public class named [Foo]. If it's in a packaged called com.abba.jesus.pidgeot, then it's file path has to be &lt;code&gt;[something]/com/abba/jesus/pidgeot/Foo.java&lt;/code&gt;, even if there's nothing in packages com, com.abba, or com.jesus.&lt;/li&gt;
&lt;li&gt;Weird type-boxing/casting rules. Each of the value types is implicitly convertible to a related class in &lt;code&gt;java.util&lt;/code&gt; (ie. &lt;code&gt;int&lt;/code&gt; =&amp;gt; &lt;code&gt;java.util.Integer&lt;/code&gt;)...except as an argument to a generic class, where it has to be declared as the class rather than the value-type (ie. &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; is a ParseException). This is fine (mostly), except that any function that takes a generic &lt;code&gt;T[]&lt;/code&gt; has to have a &lt;em&gt;separate implementation for each value type&lt;/em&gt;. Further, Java disallows casts between different class types (that aren't covariant)...except for a variable of &lt;em&gt;any&lt;/em&gt; type &lt;code&gt;v&lt;/code&gt;, &lt;code&gt;v + ""&lt;/code&gt; is &lt;em&gt;always&lt;/em&gt; a string and never results in a NullPointerException when &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The weirdness of exception handling. Prior to Java 7, there was no way to handle multiple exceptions in a single block, leaving copious room for typos in copy-pasting the same damn block to both related handlers. Oh, and you have to handle every Exception, regardless of if it makes sense to...unless it's a RuntimeException. Then the JVM gives it a free pass. Why even &lt;em&gt;have&lt;/em&gt; a duality? Why not just have stuff like that be handled as Errors or something?&lt;/li&gt;
&lt;li&gt;Weirdly inconsistent library support. See &lt;a href="http://tech.puredanger.com/2010/03/31/do-we-want-a-java-util-pair/"&gt;this article&lt;/a&gt; on the concept of a Pair class, for instance. They basically say, "Oh I don't think it's necessary, so no one else will." I've also heard people say, "Programmers will use it wrong." That is a &lt;em&gt;terrible&lt;/em&gt; reason not to support something, especially in a util class of all things. On that note...&lt;/li&gt;
&lt;li&gt;Complete lack of operator overloading. Which would you rather see:
    &lt;pre&gt;
    BigInteger a = new BigInteger("12343212");
    BigInteger b = new BigInteger("234231999");
    BigInteger c = new BigInteger("65565790099");
    return c.add(b.muliply(a));
    &lt;/pre&gt;
    or
    &lt;pre&gt;
    return c + (b * a);
    &lt;/pre&gt;
    Again, the response seems to be, "People will use it wrong." And a lot of the time, the hatred is directed at C++, specifically the stream operator:
    &lt;pre&gt;
    int i;
    cin &amp;gt;&amp;gt; i;
    cout &amp;lt;&amp;lt; i &amp;lt;&amp;lt; endl;
    &lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To compare, let's discuss Scala, a language built on top of the JVM. Let's see what it does differently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verbosity. Scala tends towards the succinct whenever possible, at least in my experience.&lt;/li&gt;
&lt;li&gt;More free-form package organization. Scala will find your files, don't worry about what you name them. You can also put more than one top-level public class in a single file (though this is still discouraged)&lt;/li&gt;
&lt;li&gt;More intuitive type-coercion. Scala's type system is complex. I don't know enough about lambda calculus to pretend I fully understand every part of it, but I do know they make value types &lt;em&gt;effectively just a different part of the standard hierarchy&lt;/em&gt;. &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; isn't a syntax problem anymore: it just works.&lt;/li&gt;
&lt;li&gt;Free-form casting and conversions. Want &lt;code&gt;A&lt;/code&gt; to always make sense as a &lt;code&gt;B&lt;/code&gt;? Why not! You can do that.&lt;/li&gt;
&lt;li&gt;No exceptions are forced to be checked anymore. Rejoice!&lt;/li&gt;
&lt;li&gt;On the library support, it just tries to have as wide support as possible, which isn't always a good thing. (Want to know all of Scala? Too bad, that's what the internet's for.)&lt;/li&gt;
&lt;li&gt;Operator overloading is just another function. This &lt;em&gt;maybe&lt;/em&gt; goes a bit too far, since you can make operators using basically any character. (The &lt;code&gt;/:&lt;/code&gt; operator for fold-left is my favourite.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, while we're at it, let's look at C#, a language made because Microsoft didn't want to be sued for using Java at one point[citation needed]:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Still verbose, though I'd argue less so.&lt;/li&gt;
&lt;li&gt;Package organization? Totally up to you. Hey, have 5 classes per file if you want.&lt;/li&gt;
&lt;li&gt;A similar (though simpler) type system to Scala. Value types are &lt;code&gt;struct&lt;/code&gt;s, everything else is an &lt;code&gt;obejct&lt;/code&gt;, and &lt;code&gt;struct&lt;/code&gt;s can be semantically treated like &lt;code&gt;object&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;Define your own cast operators! Make them as explicit as you want! &lt;/li&gt;
&lt;li&gt;Exceptions don't need to be checked. Funny how often this pops up...&lt;/li&gt;
&lt;li&gt;A decent-ish standard library which supports most of the things you'd want. Maps that &lt;em&gt;actually&lt;/em&gt; act the same as other iterables (as they damn-well should).&lt;/li&gt;
&lt;li&gt;Override &lt;em&gt;only the existing operators and only within the definition  of the class itself&lt;/em&gt; (ie, no overriding &lt;code&gt;int + int&lt;/code&gt; or something). Humourously, the bit shift operators (ie. the straming operators in C++) can only have the second operand be an &lt;code&gt;int&lt;/code&gt;, &lt;em&gt;because they're still pissed about that&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don't take this to mean Java does everything wrong. The JVM is a great piece of technology, and the language has some neat constructs seen rarely elsewhere. (Anonymous interfaces, anyone?) But &lt;em&gt;so many&lt;/em&gt; of its design decisions serve merely to act out of spite to the admittedly-overindulgent amount of freedom that C++ gives programmers. And spite is a &lt;em&gt;terrible&lt;/em&gt; way to drive a design process. Scala, it seems, was designed out of counter-spite: it is &lt;em&gt;so&lt;/em&gt; different from Java, yet is based on the exact same technology stack. In my mind, &lt;em&gt;Scala is the biggest "Fuck You" to Java that exists&lt;/em&gt;. (C# only loses out on this because it's tied so tightly to Windows that it rarely sees the light of day outside of Microsoft developer pet-projects and ASP.NET-based websites.) And when a competitor springs up just to subvert everything you've done in an ironic way? Face it, Java, you've become the new C++. And not in a good way.&lt;/p&gt;
&lt;p&gt;So there's my Java rant. It's been a long time coming. I'll probably dissect Python at some point, so if that interests you, tune in again.
'Til then, I'll be waiting for my code to compile.&lt;/p&gt;
&lt;p&gt;J&lt;/p&gt;</summary><category term="tech"></category><category term="programming"></category><category term="nerdish"></category></entry><entry><title>When Failsafes Fail</title><link href="http://jabrahams.ca/failsafes.html" rel="alternate"></link><updated>2014-03-08T00:00:00Z</updated><author><name>Jacob Abrahams</name></author><id>tag:jabrahams.ca,2014-03-08:failsafes.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Disclaimer: this post is heavily personal, and not exactly cheery. It's also probably the most honest thing I will ever post on this blog, and easily the least emotionally-restrained. It has a lot of not-well-known info about me and my life that I've never been comfortable sharing. Depending on who you are and how well you know me, it may change the tenor of our interaction, and not necessarily for the better. Stop here if you aren't okay with that, or think I wouldn't be.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Still reading? Alright, you've been warned.&lt;/p&gt;
&lt;p&gt;This post is about the effects and truths of depression and related mental illnesses, from a first- and second-hand perspective. I'll start by going over why I have whatever knowledge I do, since otherwise I'd just be talking out my ass. Then I'll go over the most important things to remember about this kind of stuff, basically a fact-or-myth about dealing with depression. I'll finish up with some opinions about more general handling of mental health issues, because what's a blog without opinion?&lt;/p&gt;
&lt;h2&gt;Background Info&lt;/h2&gt;
&lt;p&gt;I've never told this to anyone without a medical degree, but in March 2012 I was diagnosed with mild-to-moderate depression. Though this was aggravated by a borderline case of anaemia, there's some evidence to suggest I've been dealing with depression since I was a pre-teen, most notably some hereditary predisposition and, oh yeah, &lt;em&gt;the fact that I'm still suffering from it&lt;/em&gt;. Mild-to-moderate depression is basically what we'd call "high-functioning" if I were an alcoholic: it doesn't strongly affect how I go about my day-to-day life (&lt;em&gt;usually&lt;/em&gt;), but it can still lead to significant problems down the road. What it basically boils down to is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;little or no motivation to do pretty much anything&lt;/li&gt;
&lt;li&gt;extremely low social energy at times&lt;/li&gt;
&lt;li&gt;tendency towards self-defeating thought processes&lt;/li&gt;
&lt;li&gt;a few other things I won't discuss here because my blog is public&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(I don't want to even fathom the number of people who read that section and went, "&lt;em&gt;Oh.&lt;/em&gt; That explains a lot.")&lt;/p&gt;
&lt;p&gt;Why did I never tell anyone? Well, &lt;em&gt;have you met me&lt;/em&gt;? Do I seem like the type to ask outside myself for help? Do I seem like the type to &lt;em&gt;stop and admit that something is wrong&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;I guess I'm doing my best to change that, now. (This post might not stay up forever.)&lt;/p&gt;
&lt;p&gt;"But Jacob," you might say if you skipped the rest of this section, "you talk about severe depression later on. Surely you can't be as informed about that."&lt;/p&gt;
&lt;!-- Get this section approved --&gt;

&lt;p&gt;I'd respond with this ever-so-slightly more public information. In October 2010, I started dating a wonderful woman named Monica Post. This was somewhat against my better judgement because, while I was almost certain that I was madly in love with her, I was more certain that she was severely depressed, because I'd been one of the people to help her out of a particularly low point. Later we found out that she had Bipolar Disorder, an illness that is characterized by unpredictable shifts between periods of mania (over-confidence, delusions of grandeur, hyperactivity, hallucinations, psychosis, and general emotional instability) and periods of depression (which I described above, except stronger). In a move seen by those who knew as uncharacteristically mature and brave (I don't share this belief), I stayed by her for a little over three years, through the best times and the worst.&lt;/p&gt;
&lt;p&gt;I really wish I didn't have to write in past tense. Monica died just under 4 months ago.&lt;/p&gt;
&lt;p&gt;Aside:I've never openly written on this subject without some level of control over my audience. My level of "handling it" fluctuates from day to day. On the better days, I want the subject as far away from me as possible. On the worse ones, I'm not strong enough to write about it. This blog post is partially me saying, "Fuck that. I'm stronger than this." (Before you agree with me, keep in mind that I had to write this section in private because I'm shaking like a poorly-built house on a fault line.)&lt;/p&gt;
&lt;p&gt;So uh yeah. Life experience is a bitch.&lt;/p&gt;
&lt;h2&gt;Facts&lt;/h2&gt;
&lt;p&gt;(Or as close to facts as I can get)&lt;/p&gt;
&lt;p&gt;First and foremost, something I feel should always be mentioned: depression is mostly about chemical imbalances in the brain. If there's anything that bugs knowledgeable people the most, it's when people say to just "Get over it." Seriously, fuck you. That's like telling a person in a wheelchair to just get up and walk.&lt;/p&gt;
&lt;p&gt;Now let's go over some treatment methods. The "simplest" treatment is psychotherapy, or, if you're in a lazy work of fiction, "lie down on a couch with a guy who looks like Freud and talk about your mother." The current main school of thought is &lt;a href="http://en.wikipedia.org/wiki/Cognitive_behavioral_therapy"&gt;Cognitive Behavioural Therapy&lt;/a&gt;, which focuses on harmful thought processes and destructive emotional responses. I say "main", but from what I've experienced I could also easily say "only," because I've never seen any other kind of psychotherapy suggested. In programming terms, CBT (as it's almost always abbreviated) is debugging your mind: constantly thinking, "Why did I think that? Where did that emotional outburst come from? Why am I so affected by this?" Luckily, most people are better at this than &lt;code&gt;gdb&lt;/code&gt;, since it's been shown to be fairly effective on anything short of severe depression (not to mention many other kinds of mental illness.) Hell, I'd say depression-free people can even benefit from it from time to time.&lt;/p&gt;
&lt;p&gt;But sometimes it just doesn't work. You'd be surprised at how self-defeating a person with depression can be, and sometimes it's just too deeply-rooted in their thought process to be dislodged like that. Or it just takes too much energy, and depression takes enough away on its own. For that, medication is the next best thing. &lt;/p&gt;
&lt;p&gt;Remember how I said depression is mainly chemicals? See, brains are &lt;em&gt;hard&lt;/em&gt;. There's so much that can go wrong, and, even when it looks like the same thing is wrong in two people, they may not be helped by the same thing. Again, in CS-y terms, it's like supporting an Android app on every phone: there are so many subtle differences in hardware and the implementation of software that a bugfix on one platform is nowhere near guaranteed to work on all others. Hell, it might make things &lt;em&gt;worse&lt;/em&gt;. That's why there are so many anti-depressants out there, and that's why some people spend their entire life finding the right one. (Ignore the implications of the wording. That's not what I meant.) Prozac might work for you, or it might make you more suicidal. Effexor might make you a little brighter, or it might numb your emotions. Cymbalta might make you more stable or (also likely) less. But, of course, SSRIs don't work that fast, so you won't know until 4 weeks in, and by then you'll be experiencing all the &lt;em&gt;negative&lt;/em&gt; side-effects, and you'll probably go through withdrawal if it turns out it wasn't even working. Then you just repeat the process the next time you can see your psychiatrist, because, wow, it looks like they're booked &lt;em&gt;through until December&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Sorry, that's a bit of a raw nerve. Back on topic...&lt;/p&gt;
&lt;p&gt;There are more extreme cures and fixes than medication and thought-correction, but I won't go into them here because I &lt;em&gt;won't&lt;/em&gt; be able to write about them while staying in a stable frame of mind. There are also less-extreme things that help. A huge factor, for instance, is proper physical health. I've noticed personally that it's easier to handle my symptoms when I've been keeping up a healthy routine of diet and exercise (though maintaining that through an episode isn't easy, to say the least). Obviously this isn't a cure, since the episodes still happen, but it has been shown to improve the stress reaction, which I think is the most important factor in getting through it. (&lt;a href="http://www.webmd.com/depression/guide/exercise-depression"&gt;Source&lt;/a&gt;) To put this in nerd-terms, this goes about as far towards computer performance as keeping your fan free of dust: it won't fix a crashed hard-drive, but it'll help out at times.&lt;/p&gt;
&lt;h2&gt;Opinion&lt;/h2&gt;
&lt;p&gt;Where to begin?&lt;/p&gt;
&lt;p&gt;Let's start off at the obvious: please treat people with depression (and any other mental illness) as &lt;em&gt;people&lt;/em&gt;. Like, they aren't animals in a zoo or something, nor are they that mask of tragedy that hangs along its creepy-smile companion over every middle school drama department. They have just as much depth to their emotional state as any other person, and they &lt;em&gt;really&lt;/em&gt; don't like to be labelled. I know the party-line is always about "removing stigma," but I feel like a lot of people who talk like that do very little to actually &lt;em&gt;remove&lt;/em&gt; it, and in some ways actually &lt;em&gt;further&lt;/em&gt; it.&lt;/p&gt;
&lt;p&gt;On that note, the idea of a "mental health rally?" Stop. The last thing a depressed person wants is to be reminded of it in public. Further, you're making a social event &lt;em&gt;for people with no energy for social activity&lt;/em&gt;. How does that make sense? Making people aware of resources available to them is one thing. Pointing out what's &lt;em&gt;wrong&lt;/em&gt; in a public setting is another.&lt;/p&gt;
&lt;p&gt;If you're having trouble, &lt;em&gt;see a therapist at least once&lt;/em&gt;. I'm not saying to sign up for 10 sessions, just see if it helps and go from there. If you want a resource on CBT for some self-study, I found &lt;a href="http://www.amazon.com/Mind-Over-Mood-Change-Changing/dp/0898621283"&gt;Mind over Mood&lt;/a&gt; to be pretty helpful. &lt;/p&gt;
&lt;p&gt;Lastly, don't suffer in silence. Don't wait 10 years to tell your family you think something is wrong. Maybe don't blog about it, but talking to someone, &lt;em&gt;anyone&lt;/em&gt;, will help, trust me. I'm probably pushing the blog-barrier again, but that's one of the things I miss most, which is likely why I'm writing about it now, as opposed to months ago.&lt;/p&gt;
&lt;p&gt;Happy 3rd post! I'm going to go sit in my room for a while.&lt;/p&gt;
&lt;p&gt;Later,&lt;/p&gt;
&lt;p&gt;J&lt;/p&gt;</summary><category term="personal"></category><category term="mental health"></category><category term="heavy"></category></entry><entry><title>Pelican, or, How I came to despise Ruby</title><link href="http://jabrahams.ca/pelican.html" rel="alternate"></link><updated>2014-03-02T09:15:00Z</updated><author><name>Jacob Abrahams</name></author><id>tag:jabrahams.ca,2014-03-02:pelican.html</id><summary type="html">&lt;p&gt;This blog has been in the works for...well...a while now.&lt;/p&gt;
&lt;p&gt;Maybe a year, give or take.&lt;/p&gt;
&lt;p&gt;I bought the domain name back in October in the hopes of having something to show off to interviewers. When it came down to actually making the site, I ran into some issues.&lt;/p&gt;
&lt;p&gt;Namely, I had no idea how to do that.&lt;/p&gt;
&lt;p&gt;To give myself some credit, I did know a thing or two of HTML, CSS, Javascript, jQuery, and nodejs (which is what I was initially using to serve pages, from within a heroku app). But I didn't know good design practices for web (how do i shot CSS), had a lot of out-of-date information (I blame learning HTML back at 1.0), and was too cocky to just delegate all the hard decisions to an existing framework.&lt;/p&gt;
&lt;p&gt;I chose to fix the last one.&lt;/p&gt;
&lt;p&gt;The result was a broken mess that I couldn't bear to link to on my resume out of shame (but will link to &lt;a href="http://jabrahams-1.herokuapp.com"&gt;here&lt;/a&gt; out of shamelessness). So yesterday, I sat down and made some changes, because I felt work-sick and knew the only way to remedy that was to stare at text files for hours on end. I made a &lt;a href="http://github.com/JacobLuke/jacobluke.github.io"&gt;github.io repository&lt;/a&gt; and picked a framework: Octopress. It came well-recommended by various acquaintances, it had a neat aesthetic, and the deploy process looked pretty straightforward.&lt;/p&gt;
&lt;p&gt;That mistake cost me 4 hours.&lt;/p&gt;
&lt;p&gt;Let me elaborate a little. I run Windows, partially because I have been for years, partially because I like being able to game, and mostly because of inertia. (I've run Mint and Ubuntu in the past and will probably reinstall one of them at one point.) Octopress is built in Ruby. If there's one programming language community that utterly despises Windows users, it's...well, it's Objective-C, but Ruby's a close second. Basically every step of the build process had to be finagled into working. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ruby 2.0.0 doesn't work? Ruby 1.9.3 gets you one step further before breaking.&lt;/li&gt;
&lt;li&gt;Ruby just won't build? Need the not-optional-but-also-not-pre-bundled devkit.&lt;/li&gt;
&lt;li&gt;Gems won't install? Oh, by default they're sent as &lt;em&gt;binaries&lt;/em&gt;, which are obviously not going to work on a completely different operating system.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before I even found the answer to that third one, I was already looking for alternatives. Github pages (like this one) ship with Jekyll by default, but that was apparently just a less-well-loved Octopress. Plus it was still in Ruby. I considered not using a publishing platform, just injecting Bootstrap into the page to make it a little prettier, but decided that I'd rather do something a little more. I even considered writing my own publishing platform, but realized that was way beyond my effort-threshold for this blog. And then I found Pelican.&lt;/p&gt;
&lt;p&gt;Pelican is a blogging framework written in Python. This had a ton of advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I know that Python at least runs on Windows, since it's what I do most of my non-work day-to-day coding in&lt;/li&gt;
&lt;li&gt;Python projects typically have at least half-decent support for people chained to Microsoft. I actually find it's often better than their Mac support.&lt;/li&gt;
&lt;li&gt;I know enough of the language to debug things when stuff goes wrong, or potentially extend/contribute the project in some way.&lt;/li&gt;
&lt;li&gt;Usually the python community is nice people. Usually.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So I uninstalled Ruby (both versions that had made their way to my machine), deleted all the random repositories I'd checked out trying to make it work, reset all the settings that the installers had broken, and checked out Pelican. Or tried to, realized that my &lt;code&gt;PATH&lt;/code&gt; environment variable was missing most of the subdirectories of my Python installation, fixed that, and got everything working-enough to actually publish an article. And, after some early-morning wrangling with my Host configurations, this blog was born.&lt;/p&gt;
&lt;p&gt;To sum up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Don't use Windows&lt;/li&gt;
&lt;li&gt;If you absolutely must use Windows, don't use Ruby. Use Python.&lt;/li&gt;
&lt;li&gt;When in doubt, add more stuff to &lt;code&gt;PATH&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now excuse me while I hunt down a configuration setting.&lt;/p&gt;
&lt;p&gt;J&lt;/p&gt;</summary><category term="tech"></category><category term="nerdish stuff"></category><category term="programming"></category><category term="metablogging"></category></entry><entry><title>A blog</title><link href="http://jabrahams.ca/a-blog.html" rel="alternate"></link><updated>2014-03-02T01:02:00Z</updated><author><name>Jacob Abrahams</name></author><id>tag:jabrahams.ca,2014-03-02:a-blog.html</id><summary type="html">&lt;p&gt;Well now.&lt;/p&gt;
&lt;p&gt;I'd be lying if I said I haven't tried my hand at this before, but I'm giving it another shot. Plus, it's tied to my professional identity this time, which is kind of like holding my own career hostage.&lt;/p&gt;
&lt;p&gt;Hi. I'm Jacob. Nice to meet you.&lt;/p&gt;
&lt;p&gt;I do a bunch of things. I go to school at the University of Waterloo (in the frozen North). I intern at companies from time to time. (My &lt;a href="http://linkedin.com/in/jlabrahams"&gt;LinkedIn profile&lt;/a&gt; is a good source of truth on what I'm up to in that regard.) I write software from time to time, mostly simple I-wonder-how-fast-I-can-whip-this-up-in-Python things. I read books and listen to music, and when asked can never describe my taste in either, but usually have a point of view on whatever. I play some music too, mostly classical piano. I play video games, though it's kind of like my book-tastes: I never really know which ones. I bike places when my bike isn't broken, which is rare. I like good beer (lager in warm weather, amber ales in the winter), good wine (mostly Riesling and Chardonnay), and good company.&lt;/p&gt;
&lt;p&gt;I don't know what I want this blog to be yet. I have some programming-related rants that have been kicking around in my head for a while, and some short-story ideas I'd want to flesh out a little more. I try to stay away from politics, but who knows? If you're still reading at this point, chances are better-than-even that you know I haven't exactly had the best run of luck the past couple of months, and I'm on the fence about just how much of that I want to get off my chest in such a public and tied-to-me way. Or I might just talk about things I don't know anything about. Yeah, probably that one.&lt;/p&gt;
&lt;p&gt;So there it is. Basically who I am in two paragraphs. If my writing style hasn't driven you away yet, it probably won't. So sit and stay awhile.&lt;/p&gt;
&lt;p&gt;I'm sure it'll be worth it.&lt;/p&gt;
&lt;p&gt;J&lt;/p&gt;</summary><category term="metablogging"></category></entry></feed>